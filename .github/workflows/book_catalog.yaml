name: Deploy book_catalog

on:
  push: 
    branches:
      - master
    paths:
      - book_catalog/**

  workflow_dispatch: 

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r book_catalog/requirements.txt
      
      - name: Run tests
        run: |
          pytest -v -s book_catalog/tests/test_main.py

  deploy:
    runs-on: ubuntu-latest
    needs: test

    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW }}
      NAME: book_catalog
      DIRECTORY: book_catalog
      EMAIL_TO: ${{ secrets.EMAIL_TO }}  # Recipient email address
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}  # Sender email address
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}  # Your SMTP server
      SMTP_PORT: ${{ secrets.SMTP_PORT }}  # SMTP server port
      SMTP_USER: ${{ secrets.SMTP_USER }}  # SMTP username
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}  # SMTP password

    steps:
      - uses: actions/checkout@v3

      - name: Set permissions for build, push, deploy scripts
        run: |
          chmod +x ./scripts/build-image.sh
          chmod +x ./scripts/push-image.sh
          chmod +x ./scripts/deploy.sh

      - name: Build Docker image
        run: ./scripts/build-image.sh

      - name: Publish Docker image
        run: ./scripts/push-image.sh

      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2

      - name: Deploy to Kubernetes
        run: ./scripts/deploy.sh

      # Notify via email on successful deployment
      - name: Notify via email of successful deployment
        if: success()
        run: |
          sudo apt-get install swaks -y  # Install swaks
          swaks --to $EMAIL_TO \
                --from $EMAIL_FROM \
                --server $SMTP_SERVER \
                --auth-user $SMTP_USER \
                --auth-password $SMTP_PASSWORD \
                --port $SMTP_PORT \
                --header "Subject: Deployment Success: book_catalog" \
                --body "Deployment of book_catalog succeeded!"

      # Notify via email on failure
      - name: Notify via email of failure
        if: failure()
        run: |
          sudo apt-get install swaks -y  # Install swaks
          swaks --to $EMAIL_TO \
                --from $EMAIL_FROM \
                --server $SMTP_SERVER \
                --auth-user $SMTP_USER \
                --auth-password $SMTP_PASSWORD \
                --port $SMTP_PORT \
                --header "Subject: Deployment Failure: book_catalog" \
                --body "Deployment of book_catalog failed!"

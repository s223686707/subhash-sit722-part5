name: Deploy inventory_management

on:
  # Trigger the workflow on push to the master branch or changes to inventory_management directory
  push: 
    branches:
      - master
    paths:
      - inventory_management/**

  # Allows the workflow to be triggered manually
  workflow_dispatch: 

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the code
      - uses: actions/checkout@v3
      
      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9' 

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r inventory_management/requirements.txt 
      
      # Run tests
      - name: Run tests
        run: |
          pytest -v -s inventory_management/tests/test_main.py

  deploy:
    runs-on: ubuntu-latest
    needs: test  # This ensures the deploy job runs after the test job

    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW  }}
      NAME: inventory_management
      DIRECTORY: inventory_management

    steps:
      # Checkout the code
      - uses: actions/checkout@v3

      # Set executable permissions for all necessary scripts
      - name: Set permissions for build, push, deploy scripts
        run: |
          chmod +x ./scripts/build-image.sh
          chmod +x ./scripts/push-image.sh
          chmod +x ./scripts/deploy.sh

      # Build the Docker image
      - name: Build Docker image
        run: ./scripts/build-image.sh

      # Push the Docker image to the container registry
      - name: Publish Docker image
        run: ./scripts/push-image.sh

      # Install Kubectl and configure it with the cluster
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2

      # Deploy the microservice to Kubernetes
      - name: Deploy to Kubernetes
        run: ./scripts/deploy.sh